---
# Inputs to this task:
#  - lab_repo
#  - lab_branch
# Outputs of this task:
#  - lab_local_dir

- name: "Create temporary working directory to use as work_dir"
  tempfile:
    state: directory
    path: "{{ tmp_dir.path }}"
  register: __work_dir

- name: "Set temporary directory for checkout into a variable {{ __work_dir.path }}"
  set_fact:
    lab_local_dir: "{{ __work_dir.path }}"

- name: "Clone lab repository (with submodules) into {{ lab_local_dir }}"
  git:
    repo: "{{ lab_repo }}"
    version: "{{ lab_branch }}"
    dest: "{{  lab_local_dir }}"
    track_submodules: yes

- name: Read file for default settings
  command: cat {{lab_local_dir}}/.workshop/scripts/default-settings.sh
  register: default_settings

- name: Show file .workshop/scripts/default-settings.sh contents
  debug:
    var: default_settings
    verbosity: 1

- name: Process vars in default settings
  set_fact:
    terminal_image: "{{ default_settings.stdout | regex_findall('TERMINAL_IMAGE=(.+)') | first }}"
    dashboard_image: "{{ default_settings.stdout | regex_findall('DASHBOARD_IMAGE=(.+)') | first }}"
    spawner_image: "{{ default_settings.stdout | regex_findall('SPAWNER_IMAGE=(.+)') | first }}"
    console_image: "{{ default_settings.stdout | regex_findall('CONSOLE_IMAGE=(.+)') | first }}"
#    workshop_image: "{{ default_settings.stdout | regex_findall('WORKSHOP_IMAGE=(.+)') | first}}"
#    workshop_app_name: "{{ default_settings.stdout | regex_findall('WORKSHOP_NAME=(.+)') | first}} "
    workshop_file: "workshop.yaml"

- name: Show variables to use for workshop
  debug:
    msg: 
      - "terminal_image = {{ terminal_image }}"
      - "dashboard_image =  {{ dashboard_image }}"
      - "spawner_image =  {{ spawner_image }}"
      - "console_image =  {{ console_image }}"
      - "workshop_file =  {{ workshop_file }}"
    verbosity: 1

- name: Read file for workshop settings
  command: cat {{lab_local_dir}}/.workshop/settings.sh
  register: workshop_settings

- name: Show file .workshop/settings.sh contents
  debug:
    var: workshop_settings
    verbosity: 1

- name: Override vars with workshop specific settings (REQUIRED)
  set_fact:
    terminal_image: "{{ workshop_settings.stdout | regex_findall('TERMINAL_IMAGE=(.+)') | default('', true ) | first | default(terminal_image, true) }}"
    dashboard_image: "{{ workshop_settings.stdout | regex_findall('DASHBOARD_IMAGE=(.+)') | default('', true ) | first | default(dashboard_image, true) }}"
    spawner_image: "{{ workshop_settings.stdout | regex_findall('SPAWNER_IMAGE=(.+)') | default('', true ) | first | default(spawner_image, true) }}"
    console_image: "{{ workshop_settings.stdout | regex_findall('CONSOLE_IMAGE=(.+)') | default('', true ) | first | default(console_image, true) }}"
    workshop_image: "{{ workshop_settings.stdout | regex_findall('WORKSHOP_IMAGE=(.+)') | default('', true ) | first | default(workshop_image, true) }}"
    workshop_app_name: "{{ workshop_settings.stdout | regex_findall('WORKSHOP_NAME=(.+)') | default('', true ) | first | default(workshop_app_name, true) }}"
    workshop_file: "{{ workshop_settings.stdout | regex_findall('WORKSHOP_FILE=(.+)') | default('', true ) | first | default(workshop_file, true) }}"

- name: Show variables to use for workshop
  debug:
    msg: 
      - "terminal_image = {{ terminal_image }}"
      - "dashboard_image =  {{ dashboard_image }}"
      - "spawner_image =  {{ spawner_image }}"
      - "console_image =  {{ console_image }}"
      - "workshop_image =  {{ workshop_image }}"
      - "workshop_file =  {{ workshop_file }}"
      - "workshop_app_name =  {{ workshop_app_name }}"
    verbosity: 1

- name: Verify settings file exists
  stat: 
    path: "{{lab_local_dir}}/.workshop/{{ settings }}-settings.sh"
  register: settins_settings_exists
  when: settings is defined and settings|trim != ""

- name: Read settings specific configuration if settings is defined
  block:
  - name: Read file for settings specific settings
    command: cat {{lab_local_dir}}/.workshop/{{ settings }}-settings.sh
    register: settings_settings
  - name: Show file .workshop/{{ settings }}-settings.sh contents
    debug:
      var: settings_settings
      verbosity: 1
  - name: Override vars with settings specific settings (REQUIRED)
    set_fact:
      terminal_image: "{{ settings_settings.stdout | regex_findall('TERMINAL_IMAGE=(.+)') | default('', true ) | first | default(terminal_image, true) }}"
      dashboard_image: "{{ settings_settings.stdout | regex_findall('DASHBOARD_IMAGE=(.+)') | default('', true ) | first | default(dashboard_image, true) }}"
      spawner_image: "{{ settings_settings.stdout | regex_findall('SPAWNER_IMAGE=(.+)') | default('', true ) | first | default(spawner_image, true) }}"
      console_image: "{{ settings_settings.stdout | regex_findall('CONSOLE_IMAGE=(.+)') | default('', true ) | first | default(console_image, true) }}"
      workshop_image: "{{ settings_settings.stdout | regex_findall('WORKSHOP_IMAGE=(.+)') | default('', true ) | first | default(workshop_image, true) }}"
      workshop_app_name: "{{ settings_settings.stdout | regex_findall('WORKSHOP_NAME=(.+)') | default('', true ) | first | default(workshop_app_name, true) }}"
      workshop_file: "{{ settings_settings.stdout | regex_findall('WORKSHOP_FILE=(.+)') | default('', true ) | first | default(workshop_file, true) }}"
  - name: Show variables to use for workshop
    debug:
      msg: 
        - "terminal_image = {{ terminal_image }}"
        - "dashboard_image =  {{ dashboard_image }}"
        - "spawner_image =  {{ spawner_image }}"
        - "console_image =  {{ console_image }}"
        - "workshop_image =  {{ workshop_image }}"
        - "workshop_file =  {{ workshop_file }}"
        - "workshop_app_name =  {{ workshop_app_name }}"
      verbosity: 1
  when: settings is defined and settings|trim != "" and settins_settings_exists.stat.exists


- name: Read {{ workshop_file }} contents for additional workshop info
  include_vars:
    file: "{{lab_local_dir}}/workshop/{{ workshop_file }}"
    name: workshop_vars

- name: Get name and description of the workshop
  set_fact:
    workshop_name: "{{ workshop_vars.name }}"
    workshop_description: "{{ workshop_vars.description | default(workshop_vars.name, true) }}"

- name: Show variables to use for workshop
  debug:
    msg: 
      - "terminal_image = {{ terminal_image }}"
      - "dashboard_image =  {{ dashboard_image }}"
      - "spawner_image =  {{ spawner_image }}"
      - "console_image =  {{ console_image }}"
      - "workshop_image =  {{ workshop_image }}"
      - "workshop_file =  {{ workshop_file }}"
      - "workshop_app_name =  {{ workshop_app_name }}"
      - "workshop_name = {{ workshop_name }}"
      - "workshop_description = {{ workshop_description }}"
    verbosity: 0
